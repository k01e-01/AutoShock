// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class OtaUpdateSetDomainCommand {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OtaUpdateSetDomainCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsOtaUpdateSetDomainCommand(bb:flatbuffers.ByteBuffer, obj?:OtaUpdateSetDomainCommand):OtaUpdateSetDomainCommand {
  return (obj || new OtaUpdateSetDomainCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsOtaUpdateSetDomainCommand(bb:flatbuffers.ByteBuffer, obj?:OtaUpdateSetDomainCommand):OtaUpdateSetDomainCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OtaUpdateSetDomainCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

domain():string|null
domain(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
domain(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startOtaUpdateSetDomainCommand(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addDomain(builder:flatbuffers.Builder, domainOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, domainOffset, 0);
}

static endOtaUpdateSetDomainCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createOtaUpdateSetDomainCommand(builder:flatbuffers.Builder, domainOffset:flatbuffers.Offset):flatbuffers.Offset {
  OtaUpdateSetDomainCommand.startOtaUpdateSetDomainCommand(builder);
  OtaUpdateSetDomainCommand.addDomain(builder, domainOffset);
  return OtaUpdateSetDomainCommand.endOtaUpdateSetDomainCommand(builder);
}
}
