// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class OtaUpdateSetAllowBackendManagementCommand {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OtaUpdateSetAllowBackendManagementCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

allow():boolean {
  return !!this.bb!.readInt8(this.bb_pos);
}

static sizeOf():number {
  return 1;
}

static createOtaUpdateSetAllowBackendManagementCommand(builder:flatbuffers.Builder, allow: boolean):flatbuffers.Offset {
  builder.prep(1, 1);
  builder.writeInt8(Number(Boolean(allow)));
  return builder.offset();
}

}
