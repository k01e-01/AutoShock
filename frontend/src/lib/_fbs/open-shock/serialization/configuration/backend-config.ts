// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class BackendConfig {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BackendConfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBackendConfig(bb:flatbuffers.ByteBuffer, obj?:BackendConfig):BackendConfig {
  return (obj || new BackendConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBackendConfig(bb:flatbuffers.ByteBuffer, obj?:BackendConfig):BackendConfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BackendConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * Domain name of the backend server, e.g. "api.shocklink.net"
 */
domain():string|null
domain(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
domain(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Authentication token for the backend server
 */
authToken():string|null
authToken(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
authToken(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Override the Live-Control-Gateway (LCG) URL
 */
lcgOverride():string|null
lcgOverride(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lcgOverride(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startBackendConfig(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addDomain(builder:flatbuffers.Builder, domainOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, domainOffset, 0);
}

static addAuthToken(builder:flatbuffers.Builder, authTokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, authTokenOffset, 0);
}

static addLcgOverride(builder:flatbuffers.Builder, lcgOverrideOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, lcgOverrideOffset, 0);
}

static endBackendConfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBackendConfig(builder:flatbuffers.Builder, domainOffset:flatbuffers.Offset, authTokenOffset:flatbuffers.Offset, lcgOverrideOffset:flatbuffers.Offset):flatbuffers.Offset {
  BackendConfig.startBackendConfig(builder);
  BackendConfig.addDomain(builder, domainOffset);
  BackendConfig.addAuthToken(builder, authTokenOffset);
  BackendConfig.addLcgOverride(builder, lcgOverrideOffset);
  return BackendConfig.endBackendConfig(builder);
}
}
