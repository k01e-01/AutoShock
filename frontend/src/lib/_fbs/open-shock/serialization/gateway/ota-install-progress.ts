// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { OtaInstallProgressTask } from '../../../open-shock/serialization/gateway/ota-install-progress-task';


export class OtaInstallProgress {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OtaInstallProgress {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsOtaInstallProgress(bb:flatbuffers.ByteBuffer, obj?:OtaInstallProgress):OtaInstallProgress {
  return (obj || new OtaInstallProgress()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsOtaInstallProgress(bb:flatbuffers.ByteBuffer, obj?:OtaInstallProgress):OtaInstallProgress {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OtaInstallProgress()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

updateId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

task():OtaInstallProgressTask {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : OtaInstallProgressTask.FetchingMetadata;
}

progress():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startOtaInstallProgress(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUpdateId(builder:flatbuffers.Builder, updateId:number) {
  builder.addFieldInt32(0, updateId, 0);
}

static addTask(builder:flatbuffers.Builder, task:OtaInstallProgressTask) {
  builder.addFieldInt8(1, task, OtaInstallProgressTask.FetchingMetadata);
}

static addProgress(builder:flatbuffers.Builder, progress:number) {
  builder.addFieldFloat32(2, progress, 0.0);
}

static endOtaInstallProgress(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createOtaInstallProgress(builder:flatbuffers.Builder, updateId:number, task:OtaInstallProgressTask, progress:number):flatbuffers.Offset {
  OtaInstallProgress.startOtaInstallProgress(builder);
  OtaInstallProgress.addUpdateId(builder, updateId);
  OtaInstallProgress.addTask(builder, task);
  OtaInstallProgress.addProgress(builder, progress);
  return OtaInstallProgress.endOtaInstallProgress(builder);
}
}
