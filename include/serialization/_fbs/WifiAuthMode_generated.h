// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_WIFIAUTHMODE_OPENSHOCK_SERIALIZATION_TYPES_H_
#define FLATBUFFERS_GENERATED_WIFIAUTHMODE_OPENSHOCK_SERIALIZATION_TYPES_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

namespace OpenShock {
namespace Serialization {
namespace Types {

enum class WifiAuthMode : uint8_t {
  Open = 0,
  WEP = 1,
  WPA_PSK = 2,
  WPA2_PSK = 3,
  WPA_WPA2_PSK = 4,
  WPA2_ENTERPRISE = 5,
  WPA3_PSK = 6,
  WPA2_WPA3_PSK = 7,
  WAPI_PSK = 8,
  UNKNOWN = 9,
  MIN = Open,
  MAX = UNKNOWN
};

inline const WifiAuthMode (&EnumValuesWifiAuthMode())[10] {
  static const WifiAuthMode values[] = {
    WifiAuthMode::Open,
    WifiAuthMode::WEP,
    WifiAuthMode::WPA_PSK,
    WifiAuthMode::WPA2_PSK,
    WifiAuthMode::WPA_WPA2_PSK,
    WifiAuthMode::WPA2_ENTERPRISE,
    WifiAuthMode::WPA3_PSK,
    WifiAuthMode::WPA2_WPA3_PSK,
    WifiAuthMode::WAPI_PSK,
    WifiAuthMode::UNKNOWN
  };
  return values;
}

inline const char * const *EnumNamesWifiAuthMode() {
  static const char * const names[11] = {
    "Open",
    "WEP",
    "WPA_PSK",
    "WPA2_PSK",
    "WPA_WPA2_PSK",
    "WPA2_ENTERPRISE",
    "WPA3_PSK",
    "WPA2_WPA3_PSK",
    "WAPI_PSK",
    "UNKNOWN",
    nullptr
  };
  return names;
}

inline const char *EnumNameWifiAuthMode(WifiAuthMode e) {
  if (::flatbuffers::IsOutRange(e, WifiAuthMode::Open, WifiAuthMode::UNKNOWN)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesWifiAuthMode()[index];
}

}  // namespace Types
}  // namespace Serialization
}  // namespace OpenShock

#endif  // FLATBUFFERS_GENERATED_WIFIAUTHMODE_OPENSHOCK_SERIALIZATION_TYPES_H_
